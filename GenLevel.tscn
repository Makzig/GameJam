[gd_scene load_steps=7 format=2]

[ext_resource path="res://addons/kenney_prototype_textures/orange/texture_01.png" type="Texture" id=1]
[ext_resource path="res://Camera.tscn" type="PackedScene" id=2]

[sub_resource type="CSharpScript" id=4]
script/source = "using Godot;
using System;
using System.Collections.Generic;

public class GenLevel : Spatial
{
    HashSet<Vector2> _usingPositions = new HashSet<Vector2>();

    Random r = new Random();
    public override void _Ready()
    {
        GenTrees(GetNode<MeshInstance>(\"RigidBody/Ground\").GetAabb(), ResourceLoader.Load<PackedScene>(\"res://trees/Tree_0.tscn\"), 10, 10F, new Vector2(0, 0.3F));
        GenTrees(GetNode<MeshInstance>(\"RigidBody/Ground\").GetAabb(), ResourceLoader.Load<PackedScene>(\"res://trees/Cactus_0.tscn\"), 5, 5F, new Vector2(0.2F, 0.8F));
        GenTrees(GetNode<MeshInstance>(\"RigidBody/Ground\").GetAabb(), ResourceLoader.Load<PackedScene>(\"res://GreenBox.tscn\"), 5, 5F, new Vector2(0.4F, 0.5F));
    }

    private void GenTrees(AABB aabb, PackedScene packedScene, int minDist, float scale, Vector2 clip)
    {
        
        float seed = (float)r.NextDouble();

        OpenSimplexNoise noise = new OpenSimplexNoise();
        for (int x = 0; x < aabb.Size.x; x+=minDist)
        {
            for (int z = 0; z < aabb.Size.z; z+=minDist)
            {
                float n = noise.GetNoise3d(x * scale, z * scale, seed);
                if (n > clip.x && n < clip.y)
                {
                    Vector2 pos = new Vector2(x, z);
                    if (_usingPositions.Contains(pos))
                    {
                        continue;
                    }
                    _usingPositions.Add(pos);
                    Spatial node = packedScene.Instance<Spatial>();
                    node.Translation = new Vector3(x, 0, z) - (aabb.Size * 0.5F);
                    node.RotateY((float)(r.NextDouble() * Math.PI * 2));
                    AddChild(node);
                }
            }
        }
    }
}
"

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 222, 222 )

[sub_resource type="SpatialMaterial" id=2]
albedo_texture = ExtResource( 1 )
uv1_triplanar = true

[sub_resource type="BoxShape" id=3]
extents = Vector3( 1, 0.00219734, 1 )

[node name="Spatial" type="Spatial"]
script = SubResource( 4 )

[node name="RigidBody" type="RigidBody" parent="."]
mode = 1

[node name="Ground" type="MeshInstance" parent="RigidBody"]
mesh = SubResource( 1 )
skeleton = NodePath("../..")
material/0 = SubResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="RigidBody"]
transform = Transform( 126.462, 0, 0, 0, 126.462, 0, 0, 0, 126.462, 0, -0.278307, 0 )
shape = SubResource( 3 )

[node name="translate_rot_y" parent="." instance=ExtResource( 2 )]

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.765427, -0.558365, 0.319921, 0, 0.497141, 0.86767, -0.643523, -0.664138, 0.380525, 0, 2.03358, 0 )
shadow_enabled = true
